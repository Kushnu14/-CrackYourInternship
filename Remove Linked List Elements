class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
         // Remove nodes with the target value from the beginning of the list
        if(head==NULL) return NULL;
        while (head != NULL && head->val == val) {
            ListNode* temp = head;
            head = head->next;
            delete temp;
        }
        
        // Now handle the rest of the list
        ListNode* prev = NULL;
        ListNode* curr = head;

        while (curr != NULL) {
            if (curr->val == val) {
                // Remove the current node
                prev->next = prev->next->next;
                delete curr; // Free the memory of the node being removed
                curr = prev->next; // Move to the next node
            } else {
                // Move both prev and curr forward
                prev = curr;
                curr = curr->next;
            }
        }

        return head; // Return the new head of the list
    }
};
